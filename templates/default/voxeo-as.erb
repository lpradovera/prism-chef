#!/bin/sh
# Auto-generated by Chef for <%= node[:fqdn] %>
#
# Startup script for program
#
# chkconfig: 35 55 25
# description: Voxeo Prism Application Server
# processname: AS
# pidfile: <%=@prism_path%><%=node["prism"]["pid"]%>/voxeo-as.pid

# Source function library.      This creates the operating environment for the process to be started
. /etc/init.d/functions

WaitForPidToExit() {
	# check for a maximum of 60 seconds
	local retry=60
	local pid=`cat $PIDFILE`
	local foundpid=

	foundpid=$(ps -ef | grep $pid | awk '!/grep/ {print $2}')
	while [ -n "$foundpid" -a "$retry" -gt 0 ]; do
		sleep 1
		echo -n "."
		retry=$(($retry -1))
		foundpid=$(ps -ef | grep $pid | awk '!/grep/ {print $2}')
	done

	# if Process still running, kill it
	if [ -n "$foundpid" ] ; then
		echo ""
		echo $pid " is still running.  Kill it."
		kill -9 `ps -ef | grep $pid | awk '!/grep/ {print $2}'`
	fi
}



PIDFILE=<%=@prism_path%><%=node["prism"]["pid"]%>/voxeo-as.pid
LOCKFILE=<%=@prism_path%><%=node["prism"]["lock"]%>/voxeo-as
CURRENT_USER=`id -u -n`


case "$1" in
  start)
    echo -n "Starting  AS: "
    if [ -e $PIDFILE ]; then
      pid=`cat $PIDFILE`
      result=$(ps ax -o pid,command | grep $pid | grep prism)
      if [ "$result" != "" ]; then
        echo "  Application Server Server Already running.  Stop it first."
        exit 1
      fi
    fi


  export HOME=<%=@prism_path%>
  export LD_LIBRARY_PATH=<%=@prism_path%>/bin:<%=@prism_path%>/lib:$LD_LIBRARY_PATH$

  if [ "$CURRENT_USER" = <%=node["prism"]["user"]%> ]; then
    cd <%=@prism_path%>/bin; <%=@prism_path%>/bin/prism service as PIDFILE=$PIDFILE 2>&1 >>/dev/null
  else
    cd <%=@prism_path%>/bin; su <%=node["prism"]["user"]%> -s /bin/sh -p -c "<%=@prism_path%>/bin/prism service as PIDFILE=$PIDFILE 2>&1 >>/dev/null"
  fi

  echo
  touch $LOCKFILE
  ;;

  stop)
    echo -n "Shutting down AS: "
    if [ -e $PIDFILE ]; then
      kill `cat $PIDFILE`
      WaitForPidToExit
      rm -f $LOCKFILE
      rm -f $PIDFILE
    else
      echo "  AS not running."
      rm -f $LOCKFILE
      exit 0
	   fi
  echo
  ;;

  status)
    status=$(cd <%=@prism_path%>;    <%=@prism_path%>/bin/prism servicestatus as PIDFILE=<%=@prism_path%>/var/run/voxeo-as.pid )
    echo $status | grep -q "running"

    if [ $? = 1 ];then
      echo $status
      exit 3
    else
      echo $status
      exit 0
    fi
  ;;

  restart)
    $0 stop
    $0 start
  ;;

  reload)
    echo -n "Reloading AS: "
    killproc voxeo-as -HUP
  echo
  ;;

  *)
    echo "Usage: $0 {start|stop|restart|reload|status}"
    exit 1
esac
